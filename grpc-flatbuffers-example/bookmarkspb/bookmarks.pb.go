// Code generated by protoc-gen-go. DO NOT EDIT.
// source: bookmarks.proto

/*
Package service is a generated protocol buffer package.

It is generated from these files:
	bookmarks.proto

It has these top-level messages:
	AddRequest
	AddResponse
	LastAddedRequest
	LastAddedResponse
*/
package service

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type AddRequest struct {
	URL   string `protobuf:"bytes,1,opt,name=URL" json:"URL,omitempty"`
	Title string `protobuf:"bytes,2,opt,name=title" json:"title,omitempty"`
}

func (m *AddRequest) Reset()                    { *m = AddRequest{} }
func (m *AddRequest) String() string            { return proto.CompactTextString(m) }
func (*AddRequest) ProtoMessage()               {}
func (*AddRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *AddRequest) GetURL() string {
	if m != nil {
		return m.URL
	}
	return ""
}

func (m *AddRequest) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

type AddResponse struct {
}

func (m *AddResponse) Reset()                    { *m = AddResponse{} }
func (m *AddResponse) String() string            { return proto.CompactTextString(m) }
func (*AddResponse) ProtoMessage()               {}
func (*AddResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type LastAddedRequest struct {
}

func (m *LastAddedRequest) Reset()                    { *m = LastAddedRequest{} }
func (m *LastAddedRequest) String() string            { return proto.CompactTextString(m) }
func (*LastAddedRequest) ProtoMessage()               {}
func (*LastAddedRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type LastAddedResponse struct {
	ID    string `protobuf:"bytes,1,opt,name=ID" json:"ID,omitempty"`
	URL   string `protobuf:"bytes,2,opt,name=URL" json:"URL,omitempty"`
	Title string `protobuf:"bytes,3,opt,name=title" json:"title,omitempty"`
}

func (m *LastAddedResponse) Reset()                    { *m = LastAddedResponse{} }
func (m *LastAddedResponse) String() string            { return proto.CompactTextString(m) }
func (*LastAddedResponse) ProtoMessage()               {}
func (*LastAddedResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *LastAddedResponse) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *LastAddedResponse) GetURL() string {
	if m != nil {
		return m.URL
	}
	return ""
}

func (m *LastAddedResponse) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func init() {
	proto.RegisterType((*AddRequest)(nil), "service.AddRequest")
	proto.RegisterType((*AddResponse)(nil), "service.AddResponse")
	proto.RegisterType((*LastAddedRequest)(nil), "service.LastAddedRequest")
	proto.RegisterType((*LastAddedResponse)(nil), "service.LastAddedResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for BookmarksService service

type BookmarksServiceClient interface {
	Add(ctx context.Context, in *AddRequest, opts ...grpc.CallOption) (*AddResponse, error)
	LastAdded(ctx context.Context, in *LastAddedRequest, opts ...grpc.CallOption) (*LastAddedResponse, error)
}

type bookmarksServiceClient struct {
	cc *grpc.ClientConn
}

func NewBookmarksServiceClient(cc *grpc.ClientConn) BookmarksServiceClient {
	return &bookmarksServiceClient{cc}
}

func (c *bookmarksServiceClient) Add(ctx context.Context, in *AddRequest, opts ...grpc.CallOption) (*AddResponse, error) {
	out := new(AddResponse)
	err := grpc.Invoke(ctx, "/service.BookmarksService/Add", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bookmarksServiceClient) LastAdded(ctx context.Context, in *LastAddedRequest, opts ...grpc.CallOption) (*LastAddedResponse, error) {
	out := new(LastAddedResponse)
	err := grpc.Invoke(ctx, "/service.BookmarksService/LastAdded", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for BookmarksService service

type BookmarksServiceServer interface {
	Add(context.Context, *AddRequest) (*AddResponse, error)
	LastAdded(context.Context, *LastAddedRequest) (*LastAddedResponse, error)
}

func RegisterBookmarksServiceServer(s *grpc.Server, srv BookmarksServiceServer) {
	s.RegisterService(&_BookmarksService_serviceDesc, srv)
}

func _BookmarksService_Add_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BookmarksServiceServer).Add(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.BookmarksService/Add",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BookmarksServiceServer).Add(ctx, req.(*AddRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BookmarksService_LastAdded_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LastAddedRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BookmarksServiceServer).LastAdded(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.BookmarksService/LastAdded",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BookmarksServiceServer).LastAdded(ctx, req.(*LastAddedRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _BookmarksService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "service.BookmarksService",
	HandlerType: (*BookmarksServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Add",
			Handler:    _BookmarksService_Add_Handler,
		},
		{
			MethodName: "LastAdded",
			Handler:    _BookmarksService_LastAdded_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "bookmarks.proto",
}

func init() { proto.RegisterFile("bookmarks.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 207 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4f, 0xca, 0xcf, 0xcf,
	0xce, 0x4d, 0x2c, 0xca, 0x2e, 0xd6, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x2f, 0x4e, 0x2d,
	0x2a, 0xcb, 0x4c, 0x4e, 0x55, 0x32, 0xe1, 0xe2, 0x72, 0x4c, 0x49, 0x09, 0x4a, 0x2d, 0x2c, 0x4d,
	0x2d, 0x2e, 0x11, 0x12, 0xe0, 0x62, 0x0e, 0x0d, 0xf2, 0x91, 0x60, 0x54, 0x60, 0xd4, 0xe0, 0x0c,
	0x02, 0x31, 0x85, 0x44, 0xb8, 0x58, 0x4b, 0x32, 0x4b, 0x72, 0x52, 0x25, 0x98, 0xc0, 0x62, 0x10,
	0x8e, 0x12, 0x2f, 0x17, 0x37, 0x58, 0x57, 0x71, 0x41, 0x7e, 0x5e, 0x71, 0xaa, 0x92, 0x10, 0x97,
	0x80, 0x4f, 0x62, 0x71, 0x89, 0x63, 0x4a, 0x4a, 0x2a, 0xcc, 0x28, 0x25, 0x6f, 0x2e, 0x41, 0x24,
	0x31, 0x88, 0x42, 0x21, 0x3e, 0x2e, 0x26, 0x4f, 0x17, 0xa8, 0xf1, 0x4c, 0x9e, 0x2e, 0x30, 0xfb,
	0x98, 0xb0, 0xd8, 0xc7, 0x8c, 0x64, 0x9f, 0x51, 0x0f, 0x23, 0x97, 0x80, 0x13, 0xcc, 0x0b, 0xc1,
	0x10, 0xa7, 0x0b, 0x19, 0x71, 0x31, 0x3b, 0xa6, 0xa4, 0x08, 0x09, 0xeb, 0x41, 0xfd, 0xa2, 0x87,
	0xf0, 0x88, 0x94, 0x08, 0xaa, 0x20, 0xd4, 0x9d, 0x0c, 0x42, 0x2e, 0x5c, 0x9c, 0x70, 0x57, 0x09,
	0x49, 0xc2, 0x15, 0xa1, 0xbb, 0x5e, 0x4a, 0x0a, 0x9b, 0x14, 0xcc, 0x94, 0x24, 0x36, 0x70, 0x20,
	0x1a, 0x03, 0x02, 0x00, 0x00, 0xff, 0xff, 0xc0, 0x30, 0xf7, 0xf1, 0x57, 0x01, 0x00, 0x00,
}
